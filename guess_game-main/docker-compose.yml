services:
  postgres:
    image: postgres:15-alpine
    container_name: guess_game_postgres
    environment:
      POSTGRES_DB: guess_game
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secretpass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - guess_game_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  backend1:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: guess_game_backend1
    environment:
      FLASK_APP: run.py
      FLASK_ENV: production
      FLASK_DB_TYPE: postgres
      FLASK_DB_USER: postgres
      FLASK_DB_NAME: guess_game
      FLASK_DB_PASSWORD: secretpass
      FLASK_DB_HOST: postgres
      FLASK_DB_PORT: 5432
      JWT_SECRET_KEY: your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - guess_game_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  backend2:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: guess_game_backend2
    environment:
      FLASK_APP: run.py
      FLASK_ENV: production
      FLASK_DB_TYPE: postgres
      FLASK_DB_USER: postgres
      FLASK_DB_NAME: guess_game
      FLASK_DB_PASSWORD: secretpass
      FLASK_DB_HOST: postgres
      FLASK_DB_PORT: 5432
      JWT_SECRET_KEY: your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - guess_game_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: http://localhost/api
    container_name: guess_game_frontend
    networks:
      - guess_game_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: guess_game_nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend1
      - backend2
      - frontend
    networks:
      - guess_game_network
    restart: unless-stopped
    volumes:
      - ./nginx/logs:/var/log/nginx
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  postgres_data:
    driver: local

networks:
  guess_game_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
